import smtplib
from email.mime.text import MIMEText
import imaplib
import email
import re

# Funkcja do wysyłania e-maila
def send_email(to, subject, message):
    # Tworzenie wiadomości e-mail
    msg = MIMEText(message)
    msg['Subject'] = subject
    msg['From'] = 'your_email@example.com'
    msg['To'] = to

    # Wysyłanie wiadomości e-mail
    with smtplib.SMTP('smtp.gmail.com', 587) as server:
        server.starttls()
        server.login('your_email@example.com', 'your_password')
        server.send_message(msg)

# Funkcja do pobierania ilości warzyw z treści e-maila
def get_quantity_from_email(email_body):
    # Przykład: ilość warzyw jest w formacie: "Quantity: 10"
    match = re.search(r'Quantity:\s*(\d+)', email_body)
    if match:
        return int(match.group(1))
    return 0

# Funkcja do pobierania ceny warzywa
def get_price(vegetable, quantity):
    # Przykładowa cena
    prices_per_unit = {
        'pomidor': 2.5,
        'ziemniak': 1.2,
        'marchew': 0.8
    }
    return prices_per_unit.get(vegetable.lower(), 0) * quantity

# Funkcja do pobierania treści e-maila
def get_email_content(vegetable, quantity, price):
    content = f"Cena {vegetable} dla ilości {quantity} wynosi: {price} zł"
    return content

# Funkcja do pobierania adresu e-mail do odpowiedzi
def get_reply_email(email_message):
    return email_message['Reply-To'] or email_message['From']

# Funkcja do pobierania tematu e-maila
def get_email_subject(email_message):
    return email_message['Subject']

# Funkcja do pobierania treści e-maila
def get_email_message(email_message):
    if email_message.is_multipart():
        for part in email_message.walk():
            if part.get_content_type() == 'text/plain':
                return part.get_payload(decode=True).decode('utf-8')
    else:
        return email_message.get_payload(decode=True).decode('utf-8')

# Funkcja do pobierania nowego e-maila
def fetch_latest_email():
    mail = imaplib.IMAP4_SSL('imap.gmail.com')
    mail.login('your_email@example.com', 'your_password')
    mail.select('inbox')

    result, data = mail.search(None, 'UNSEEN')
    email_ids = data[0].split()
    if not email_ids:
        return None

    latest_email_id = email_ids[-1]
    result, data = mail.fetch(latest_email_id, '(RFC822)')
    raw_email = data[0][1]
    email_message = email.message_from_bytes(raw_email)

    return email_message

# Pobieranie nowego e-maila
email_message = fetch_latest_email()
if email_message:
    email_body = get_email_message(email_message)

    # Pobieranie ilości warzyw z e-maila
    quantity = get_quantity_from_email(email_body)

    # Ustalanie warzywa
    vegetable_match = re.search(r'Vegetable:\s*(\w+)', email_body)
    vegetable = vegetable_match.group(1) if vegetable_match else 'unknown'

    # Pobieranie ceny warzywa
    price = get_price(vegetable, quantity)

    # Pobieranie treści e-maila
    content = get_email_content(vegetable, quantity, price)

    # Pobieranie adresu e-mail do odpowiedzi
    reply_email = get_reply_email(email_message)

    # Pobieranie tematu e-maila
    subject = get_email_subject(email_message)

    # Wysyłanie odpowiedzi na e-mail
    send_email(reply_email, subject, content)
else:
    print("Brak nowych wiadomości e-mail.")
